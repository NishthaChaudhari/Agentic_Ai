{
  "name": "Linkedin Agent with Images",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        -120,
        0
      ],
      "id": "4150e86c-84b0-415d-badc-e14903bda26c",
      "name": "Telegram Trigger",
      "webhookId": "da146ba1-2671-4aa4-b495-cc2acaf41821",
      "credentials": {
        "telegramApi": {
          "id": "xBv1s9WjvsIjCA9X",
          "name": "Linkedin Agent (with Images)"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "id": "17dbabf5-ae7c-49ec-a9ca-324dbff5c53b"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "2bea6355-449a-4374-ab4c-b03c40161105",
                    "leftValue": "={{ $json.message.voice.file_id }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "voice"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        40,
        0
      ],
      "id": "be312c69-e14f-49e4-9642-5f5c652301b0",
      "name": "Switch"
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.voice.file_id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        220,
        80
      ],
      "id": "0bb32b87-75c7-4e38-9954-f037c6d4504c",
      "name": "Telegram",
      "webhookId": "e95cf2f5-b0cf-4bf5-9458-3035f7b00e34",
      "credentials": {
        "telegramApi": {
          "id": "xBv1s9WjvsIjCA9X",
          "name": "Linkedin Agent (with Images)"
        }
      }
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        400,
        80
      ],
      "id": "2e9c55e7-6250-4b75-b39d-229b20a792fd",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "aTcCV5l29TepFXne",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        1540,
        480
      ],
      "id": "8ff4fd69-ebe7-4fd6-869f-b2b5369014d8",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3a78ba77-8c52-4650-8947-7ccc6c9cbb72",
              "name": "text",
              "value": "={{ $json.message.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        300,
        -80
      ],
      "id": "ed7a0e45-e3ab-405d-bd21-2f6e396fbea1",
      "name": "Set Text"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "gpt-4o"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1300,
        480
      ],
      "id": "9aafeded-72fb-44ca-bdd8-976281f095cc",
      "name": "GPT-4o mini",
      "credentials": {
        "openAiApi": {
          "id": "aTcCV5l29TepFXne",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "gpt-4.1"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1060,
        480
      ],
      "id": "af4d4d32-9b4a-4ab1-b3fc-53ca88828e0f",
      "name": "GPT-4.1",
      "credentials": {
        "openAiApi": {
          "id": "aTcCV5l29TepFXne",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Here is the post to revise: {{ $('Set Post').item.json.post }}\nHere is the human feedback: {{ $json.data.text }}",
        "options": {
          "systemMessage": "=# Overview  \nYou are an expert in crafting professional and engaging LinkedIn posts. Your task is to take an existing draft and improve it based on the feedback provided by the user. Focus on clarity, tone, and impact—while staying aligned with the user's intent and suggestions.\n\nMake sure the revised post is well-structured, thoughtful, and formatted in a way suitable for LinkedIn.\n\n# Tool\n- Tavily Search Search: Always use Tavily Search Tool for real-time web search to gather accurate, up-to-date information before writing the post.\n\n# Notes\n- Respond with the post only.\n- Do not use markdown format (such as **bold** for emphasis.)\n- Use line breaks (\\n\\n) to separate paragraphs.  \n- Do not use hashtags."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        1680,
        140
      ],
      "id": "b13217a0-5c01-46d5-9a6c-9fc5e223700b",
      "name": "Iteration Agent"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.text }}",
        "options": {
          "systemMessage": "=# Role\nYou are an AI assistant specialized in creating LinkedIn posts based on user input. Your goal is to generate informative, insightful, and engaging content that is well-suited for a professional audience on LinkedIn.\n\n# Mandatory Tool\n- Tavily Search Search: Always use Tavily Search Tool for real-time web search to gather accurate, up-to-date information before writing the post. Use this tool every single time.\n\n# Instructions\n1. Search the web for relevant, current information using Tavily.\n2. Write a compelling LinkedIn post (max 2200 characters), formatted in clear Markdown.\n3. Maintain a professional, informative tone. Add value through insights, trends, or reflections.\n4. Do not include any source reference inline.\n5. Avoid using slang or excessive emojis. A thoughtful tone is preferred over hype.\n6. Do not output anything except the final Markdown-formatted post.\n\n# Format\nRespond with the post only. Format it using proper Markdown:  \n- Do not use markdown format (like **bold** for emphasis.) \n- Use line breaks (\\n\\n) to separate paragraphs.  \n- Do not use hashtags.\n- always add a bit of personal touch to the post\n\n# Example  \n**Input:** \"Create a LinkedIn post about a new breakthrough in solar panel technology\"  \n**Action:** Use Web Search Tool to find recent developments in solar panel innovation  \n**Output:**  \"I’ve always believed that clean energy isn’t just about saving the planet—it’s about building smarter, more resilient systems for the future. And today’s news gives even more reason to be optimistic.\n\nResearchers have just achieved a major breakthrough in solar panel technology using perovskite materials. These next-gen cells are not only more efficient than traditional silicon panels, but also cheaper and more adaptable. According to Nature Energy, they’ve now surpassed 30% efficiency in lab tests—an incredible milestone.\n\nThis kind of progress opens the door for wider adoption of solar across industries: from rooftops and electric vehicles to wearables and off-grid communities.\n\nIt’s exciting to see how far we’ve come—and how much potential is still ahead.\"\n\n# Notes\nFor every request use Tavily Search tool\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        740,
        0
      ],
      "id": "5289e3be-a5ef-4bc2-9445-1d9468def0a8",
      "name": "Content Creation Agent"
    },
    {
      "parameters": {
        "operation": "sendAndWait",
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "message": "={{ $json.post }}",
        "responseType": "freeText",
        "options": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1220,
        0
      ],
      "id": "7150d6fc-55f1-49fc-a189-305fc85918ae",
      "name": "Feedback Request",
      "webhookId": "e83404ac-474a-4cb5-b57a-6d0c588412fb",
      "credentials": {
        "telegramApi": {
          "id": "xBv1s9WjvsIjCA9X",
          "name": "Linkedin Agent (with Images)"
        }
      }
    },
    {
      "parameters": {
        "inputText": "={{ $json.data.text }}",
        "categories": {
          "categories": [
            {
              "category": "Publish",
              "description": "The user confirms the post is good to go. No changes are requested. Feedback is clearly positive or includes phrases indicating approval, readiness, or satisfaction.\n\nExamples:\n\t•\t“Looks great, publish it!”\n\t•\t“Good to go”\n\t•\t“Approved”\n\t•\t“Yes, this works”\n\t•\t“Let’s post this one”\n\t•\t“Perfect. No edits needed”\n\t•\t“Love it. Ship it!”"
            },
            {
              "category": "Iterate",
              "description": "The user requests revisions or suggests changes. Feedback includes any critique, suggestions, hesitation, or instructions to modify, improve, or tweak the content.  Examples: \t•\t“Can we make it more concise?” \t•\t“Let’s try a more engaging hook” \t•\t“Change the tone a bit, it’s too formal” \t•\t“Add a call to action” \t•\t“Try rephrasing the second paragraph” \t•\t“Not quite there yet, try again” \t•\t“Needs more punch. Rewrite”"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.textClassifier",
      "typeVersion": 1,
      "position": [
        1380,
        0
      ],
      "id": "26b3de7c-4e8c-4896-a422-2f4e19bcd2f4",
      "name": "Feedback Evaluation"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b1ba844e-7612-4e6b-9d99-bf107c548209",
              "name": "post",
              "value": "={{ $json.output }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1060,
        0
      ],
      "id": "7d14bca0-8c87-4941-958c-c5e7ba4b8747",
      "name": "Set Post"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Linkedin Post:\n\n{{ $('Set Post').item.json.post }}",
        "options": {
          "systemMessage": "=## System Prompt\n\nYou are an assistant that helps turn LinkedIn posts into visual assets.\n\nYour task is to read a LinkedIn post provided in the user's message and create a detailed image generation prompt based on its content.\n\nThe generated prompt should describe a relevant, professional-looking **infographic or supportive visual** that aligns with the tone, topic, and intent of the LinkedIn post.\n\n## Guidelines\n\n- Focus on creating visuals that suit LinkedIn: clean, minimal, data-driven, and professional.\n- If the post includes numbers, comparisons, trends, or processes, consider formats like bar charts, timelines, graphs, or icon-based summaries.\n- If the post is motivational, conceptual, or abstract, suggest visuals like metaphoric diagrams or simplified illustrations that support the message.\n- Avoid social-media-styled visuals (like memes or loud posters).\n- Be clear and descriptive enough so a second LLM (or image generation model) can create the visual from your prompt alone.\n- Try to minimize the amount of text on the image.\n- Return **only the image generation prompt**, in plain English.\n\n## Output Format\n\nReturn the prompt in plain Markdown (no metadata, no comments)."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        1760,
        -380
      ],
      "id": "ebd77024-8fdb-4619-b64b-5dc8605f3da8",
      "name": "Create Image Prompt"
    },
    {
      "parameters": {
        "person": "F-bE6KRT-T",
        "text": "={{ $('Set Post').item.json.post }}",
        "shareMediaCategory": "IMAGE",
        "additionalFields": {
          "visibility": "PUBLIC"
        }
      },
      "type": "n8n-nodes-base.linkedIn",
      "typeVersion": 1,
      "position": [
        2220,
        0
      ],
      "id": "62e33597-19ad-4c16-82d5-163ad1ba365f",
      "name": "LinkedIn",
      "credentials": {
        "linkedInOAuth2Api": {
          "id": "udDHVpgmRUXDHnLM",
          "name": "LinkedIn account"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "This tool allows you to search the web.",
        "method": "POST",
        "url": "https://api.tavily.com/search",
        "sendHeaders": true,
        "parametersHeaders": {
          "values": [
            {
              "name": "Authorization",
              "valueProvider": "fieldValue",
              "value": "Bearer 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"
            },
            {
              "name": "Content-Type",
              "valueProvider": "fieldValue",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"query\": \"{searchTerm}\",\n  \"topic\": \"general\",\n  \"search_depth\": \"basic\",\n  \"chunks_per_source\": 3,\n  \"max_results\": 1,\n  \"time_range\": null,\n  \"days\": 7,\n  \"include_answer\": true,\n  \"include_raw_content\": false,\n  \"include_images\": false,\n  \"include_image_descriptions\": false,\n  \"include_domains\": [],\n  \"exclude_domains\": []\n}",
        "placeholderDefinitions": {
          "values": [
            {
              "name": "searchTerm",
              "description": "The subject the user wants to explore"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        1180,
        480
      ],
      "id": "afcaac05-e65b-455d-b93f-7ba30d069a4f",
      "name": "Tavily Search"
    },
    {
      "parameters": {
        "content": "## User Input",
        "height": 420,
        "width": 760
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -160,
        -120
      ],
      "typeVersion": 1,
      "id": "e2efda33-1a2e-422f-b657-d7bb8169b137",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## Human in the Loop - Text Generation",
        "height": 580,
        "width": 1320,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        680,
        -120
      ],
      "typeVersion": 1,
      "id": "2e5874cf-a1b0-4eca-97bb-2b425a1f1a62",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## Publishing",
        "height": 360,
        "width": 340,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2100,
        -120
      ],
      "typeVersion": 1,
      "id": "1d624d58-2fd0-44cd-a30f-4b31d9fb61d1",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "## Image Generation",
        "height": 320,
        "width": 520,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1700,
        -460
      ],
      "typeVersion": 1,
      "id": "98d51030-5778-4464-a0bd-62c257e847f7",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "resource": "image",
        "model": "gpt-image-1",
        "prompt": "={{ $json.output }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        2060,
        -380
      ],
      "id": "08763d7c-7b68-4f18-be36-458a62a59f61",
      "name": "Generate Image",
      "credentials": {
        "openAiApi": {
          "id": "aTcCV5l29TepFXne",
          "name": "OpenAi account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Set Text",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Content Creation Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "Iteration Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Set Text": {
      "main": [
        [
          {
            "node": "Content Creation Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GPT-4o mini": {
      "ai_languageModel": [
        [
          {
            "node": "Feedback Evaluation",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "GPT-4.1": {
      "ai_languageModel": [
        [
          {
            "node": "Content Creation Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Iteration Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Create Image Prompt",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Iteration Agent": {
      "main": [
        [
          {
            "node": "Set Post",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Content Creation Agent": {
      "main": [
        [
          {
            "node": "Set Post",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Feedback Request": {
      "main": [
        [
          {
            "node": "Feedback Evaluation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Feedback Evaluation": {
      "main": [
        [
          {
            "node": "Create Image Prompt",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Iteration Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Post": {
      "main": [
        [
          {
            "node": "Feedback Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Image Prompt": {
      "main": [
        [
          {
            "node": "Generate Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Tavily Search": {
      "ai_tool": [
        [
          {
            "node": "Content Creation Agent",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "Iteration Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Generate Image": {
      "main": [
        [
          {
            "node": "LinkedIn",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "62a8ac50-bdb6-4da3-9a46-580d2e9c73f9",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "f825ed080c0f1ba8a812af8bd5da22b9cd0a6f1e2e29508bd8e7306c7d8671a5"
  },
  "id": "LXDFUoc2hOvkHJCZ",
  "tags": []
}